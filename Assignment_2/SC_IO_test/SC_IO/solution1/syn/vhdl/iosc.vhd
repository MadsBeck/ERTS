-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.2
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity iosc is
port (
    clk : IN STD_LOGIC;
    reset : IN STD_LOGIC;
    ctrl : IN STD_LOGIC_VECTOR (3 downto 0);
    inSwitch : IN STD_LOGIC_VECTOR (3 downto 0);
    outLeds : OUT STD_LOGIC_VECTOR (3 downto 0) );
end;


architecture behav of iosc is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "iosc,hls_ip_2017_2,{HLS_INPUT_TYPE=sc,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg484-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.516000,HLS_SYN_LAT=3,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=209,HLS_SYN_LUT=205}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal iosc_ssdm_thread_s_load_fu_110_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal grp_iosc_timeThread_fu_74_timer : STD_LOGIC;
    signal grp_iosc_timeThread_fu_74_timer_ap_vld : STD_LOGIC;
    signal grp_iosc_iosThread_fu_92_outLeds : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_iosc_iosThread_fu_92_outLeds_ap_vld : STD_LOGIC;
    signal grp_iosc_iosThread_fu_92_timer : STD_LOGIC;
    signal grp_iosc_iosThread_fu_92_iosc_switchs_V : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_iosc_iosThread_fu_92_iosc_switchs_V_ap_vld : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal timer : STD_LOGIC_VECTOR (0 downto 0);

    component iosc_timeThread IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        timer : OUT STD_LOGIC;
        timer_ap_vld : OUT STD_LOGIC );
    end component;


    component iosc_iosThread IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ctrl : IN STD_LOGIC_VECTOR (3 downto 0);
        inSwitch : IN STD_LOGIC_VECTOR (3 downto 0);
        outLeds : OUT STD_LOGIC_VECTOR (3 downto 0);
        outLeds_ap_vld : OUT STD_LOGIC;
        timer : IN STD_LOGIC;
        iosc_switchs_V : OUT STD_LOGIC_VECTOR (3 downto 0);
        iosc_switchs_V_ap_vld : OUT STD_LOGIC );
    end component;



begin
    grp_iosc_timeThread_fu_74 : component iosc_timeThread
    port map (
        ap_clk => clk,
        ap_rst => reset,
        timer => grp_iosc_timeThread_fu_74_timer,
        timer_ap_vld => grp_iosc_timeThread_fu_74_timer_ap_vld);

    grp_iosc_iosThread_fu_92 : component iosc_iosThread
    port map (
        ap_clk => clk,
        ap_rst => reset,
        ctrl => ctrl,
        inSwitch => inSwitch,
        outLeds => grp_iosc_iosThread_fu_92_outLeds,
        outLeds_ap_vld => grp_iosc_iosThread_fu_92_outLeds_ap_vld,
        timer => grp_iosc_iosThread_fu_92_timer,
        iosc_switchs_V => grp_iosc_iosThread_fu_92_iosc_switchs_V,
        iosc_switchs_V_ap_vld => grp_iosc_iosThread_fu_92_iosc_switchs_V_ap_vld);





    outLeds_assign_proc : process(clk)
    begin
        if (clk'event and clk =  '1') then
            if ((ap_const_logic_1 = grp_iosc_iosThread_fu_92_outLeds_ap_vld)) then 
                outLeds <= grp_iosc_iosThread_fu_92_outLeds;
            end if; 
        end if;
    end process;


    timer_assign_proc : process(clk)
    begin
        if (clk'event and clk =  '1') then
            if ((ap_const_logic_1 = grp_iosc_timeThread_fu_74_timer_ap_vld)) then 
                timer <= (0=>grp_iosc_timeThread_fu_74_timer, others=>'-');
            end if; 
        end if;
    end process;

    ap_CS_fsm <= ap_const_lv2_0;
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    grp_iosc_iosThread_fu_92_timer <= timer(0);
    iosc_ssdm_thread_s_load_fu_110_p1 <= ap_const_lv1_0;
end behav;

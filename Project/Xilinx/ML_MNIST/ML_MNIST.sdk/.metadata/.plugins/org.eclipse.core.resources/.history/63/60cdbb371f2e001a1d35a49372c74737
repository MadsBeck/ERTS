/*
 * Empty C++ Application
 */

#include "xparameters.h"
#include "xgpio.h"
#include "xil_printf.h"
#include "led_ip.h"
//#include "xclassify.h"
#include "PreProcessing.h"
#include "nnClassifier.h"
#include "xscutimer.h"

// For SD
#include <stdio.h>
#include <string.h>
#include "FileSDCard.h"

XGpio btn;
//XClassify nn;
int main()
{
	XScuTimer timer;
	XScuTimer_Config* timeCfg;
	timeCfg = XScuTimer_LookupConfig(XPAR_PS7_SCUTIMER_0_DEVICE_ID);
	XScuTimer_CfgInitialize(&timer,timeCfg,XPAR_PS7_SCUTIMER_0_BASEADDR);
	XScuTimer_Start(&timer);
	xil_printf("Starting program\r\n");

	int Status;
	char image[16];
	u32 state;

	char file1[] = "0.pgm";
	char file2[] = "1.pgm";
	char file3[] = "2.pgm";
	char file4[] = "3.pgm";
	char file5[] = "4.pgm";
	char file6[] = "5.pgm";
	char file7[] = "6.pgm";
	char file8[] = "98.pgm";
	char file9[] = "74.pgm" ;
	char file10[] = "120.pgm";
	char file11[] = "121.pgm";
	char file12[] = "138.pgm";
	char file13[] = "186.pgm";
	char file14[] = "499.pgm";
	char file15[] = "500.pgm";
	char file16[] = "5139.pgm";
	char file17[] = "2723.pgm";
	char file18[] = "4409.pgm";
	char file19[] = "8067.pgm";
	char file20[] = "5608.pgm";
	char file21[] = "8357.pgm";
	char file22[] = "8387.pgm";
	char file23[] = "8717.pgm";

	u8 correct[] = {7, 2, 1, 0, 4, 1, 4, 6, 1, 5, 6, 6, 2, 6, 3, 0, 2, 1, 0, 8, 9, 9, 8};

	char* images[] = {file1,file2,file3,file4,file5,file6,file7,file8, file9, file10, file11, file12, file13, file14, file15, file16, file17,
					   file18, file19, file20, file21, file22, file23};


	if (XGpio_Initialize(&btn,XPAR_AXI_GPIO_0_DEVICE_ID) != XST_SUCCESS)
		return XST_FAILURE;

	xil_printf("Starting GPIO\r\n");

	XGpio_SetDataDirection(&btn,1,0xFF);

	xil_printf("Setting direction\r\n");

	nnClassifier* net = nnClassifier::getInstance();

	PreProcesser* pp = PreProcesser::getInstance();


//	if (XClassify_Initialize(&nn,XPAR_CLASSIFY_0_DEVICE_ID) != XST_SUCCESS)
//	{
//		return XST_FAILURE;
//	}

	for(u8 i = 0; i < 23; i++)
	{

		xil_printf("Waiting for button push\r\n");
		while(!XGpio_DiscreteRead(&btn,1))
		{}

		pp->runPreProcessing(images[i],image);

		//XClassify_Start(&nn);
		xil_printf("Starting classifier\r\n");

//		while(!XClassify_IsReady(&nn))
//		{
//
//		}

		state = net->run(image);
		//Status = XClassify_Write_img_Bytes(&nn,0,image,16);

//		while(!XClassify_IsReady(&nn))
//		{
//
//		}

//		XClassify_Start(&nn);
//
//		while(!XClassify_IsReady(&nn))
//		{
//
//		}

//		state = XClassify_Get_return(&nn);

		LED_IP_mWriteReg(XPAR_LED_IP_S_AXI_BASEADDR,0,state);


		if(state == correct[i])
			xil_printf("The prediction is correct: ");
		else
			xil_printf("The prediction is wrong: ");

		xil_printf("got %d, the correct is %d\r\n",state, correct[i]);

		while(XGpio_DiscreteRead(&btn,1))
		{}

	}


	xil_printf("Ending program\r\n");
	return 0;
}

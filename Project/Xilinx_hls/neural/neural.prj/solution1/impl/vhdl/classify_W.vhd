-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.2
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ==============================================================

library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity classify_W_rom is 
    generic(
             dwidth     : integer := 8; 
             awidth     : integer := 9; 
             mem_size    : integer := 512
    ); 
    port (
          addr0      : in std_logic_vector(awidth-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(dwidth-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of classify_W_rom is 

signal addr0_tmp : std_logic_vector(awidth-1 downto 0); 
type mem_array is array (0 to mem_size-1) of std_logic_vector (dwidth-1 downto 0); 
signal mem : mem_array := (
    0 => "00110101", 1 => "00001001", 2 => "00111000", 3 => "00101110", 
    4 => "10111101", 5 => "00111000", 6 => "11000011", 7 => "11000000", 
    8 => "00011011", 9 => "00110101", 10 => "11100011", 11 => "11000000", 
    12 => "00101010", 13 => "11100110", 14 => "11100010", 15 => "00000011", 
    16 => "00001110", 17 => "00101111", 18 => "11001010", 19 => "00010001", 
    20 => "01000111", 21 => "11101100", 22 => "11101010", 23 => "00100010", 
    24 => "11000101", 25 => "10111100", 26 => "00011111", 27 => "11010000", 
    28 => "10110110", 29 => "00111011", 30 => "00101011", 31 => "11111001", 
    32 => "00000100", 33 => "11011110", 34 => "11111110", 35 => "11110010", 
    36 => "00111101", 37 => "00111110", 38 => "11111001", 39 => "00010111", 
    40 => "11110010", 41 => "00000111", 42 => "11110010", 43 => "11100000", 
    44 => "11101111", 45 => "00101100", 46 => "11111010", 47 => "11110011", 
    48 => "00111100", 49 => "00011001", 50 => "11110000", 51 => "11111100", 
    52 => "00011000", 53 => "10111100", 54 => "00010000", 55 => "11011001", 
    56 => "11000111", 57 => "00111001", 58 => "00101001", 59 => "11110000", 
    60 => "11011010", 61 => "11010111", 62 => "00010010", 63 => "00000110", 
    64 => "11011000", 65 => "01000011", 66 => "11011010", 67 => "10111101", 
    68 => "11110110", 69 => "00011101", 70 => "00011010", 71 => "11101010", 
    72 => "11110110", 73 => "11001101", 74 => "11010000", 75 => "11011111", 
    76 => "00101111", 77 => "00001100", 78 => "00100100", 79 => "11100110", 
    80 => "00001000", 81 => "11101111", 82 => "11011110", 83 => "11110010", 
    84 => "00010111", 85 => "11010000", 86 => "00111110", 87 => "00000001", 
    88 => "11000000", 89 => "01011110", 90 => "11011011", 91 => "00110000", 
    92 => "10101100", 93 => "11111110", 94 => "11110010", 95 => "11101000", 
    96 => "01011000", 97 => "01011110", 98 => "00110110", 99 => "00101010", 
    100 => "00001010", 101 => "10111101", 102 => "00100101", 103 => "11100010", 
    104 => "00011000", 105 => "11011000", 106 => "00010011", 107 => "11010010", 
    108 => "00110101", 109 => "11111111", 110 => "11111001", 111 => "00001101", 
    112 => "11100101", 113 => "11111101", 114 => "00011110", 115 => "11000110", 
    116 => "11101011", 117 => "11010110", 118 => "00111111", 119 => "11100100", 
    120 => "11100110", 121 => "11101110", 122 => "11001110", 123 => "00100101", 
    124 => "11111001", 125 => "11010111", 126 => "11011100", 127 => "00100100", 
    128 => "10101001", 129 => "00000100", 130 => "00110001", 131 => "00000100", 
    132 => "11101101", 133 => "11101110", 134 => "00010101", 135 => "11110000", 
    136 => "00100001", 137 => "10111111", 138 => "11101110", 139 => "11010101", 
    140 => "00111111", 141 => "00101100", 142 => "11011110", 143 => "00101000", 
    144 => "11101111", 145 => "11010101", 146 => "11001110", 147 => "00100000", 
    148 => "11111011", 149 => "00100101", 150 => "00101001", 151 => "11110001", 
    152 => "00000101", 153 => "00100011", 154 => "00101010", 155 => "11010111", 
    156 => "10111100", 157 => "11100110", 158 => "11010001", 159 => "00110110", 
    160 => "00111110", 161 => "00101100", 162 => "11110110", 163 => "11011101", 
    164 => "11111000", 165 => "11010110", 166 => "00010011", 167 => "11110100", 
    168 => "00111101", 169 => "11100100", 170 => "00101000", 171 => "00111000", 
    172 => "00010001", 173 => "00001111", 174 => "11101000", 175 => "11011100", 
    176 => "00100101", 177 => "00011001", 178 => "00001000", 179 => "11100010", 
    180 => "00110111", 181 => "11101010", 182 => "11110011", 183 => "00010010", 
    184 => "11010010", 185 => "11001111", 186 => "11011101", 187 => "11001001", 
    188 => "11110010", 189 => "11111010", 190 => "11110001", 191 => "00001101", 
    192 => "00011001", 193 => "11001010", 194 => "00011111", 195 => "00011001", 
    196 => "01000101", 197 => "00101000", 198 => "11101100", 199 => "11110111", 
    200 => "01000000", 201 => "10111101", 202 => "00000001", 203 => "00010010", 
    204 => "10111101", 205 => "00010101", 206 => "11100100", 207 => "00001101", 
    208 => "11111011", 209 => "11011111", 210 => "00101101", 211 => "00110111", 
    212 => "00001111", 213 => "00100100", 214 => "11001111", 215 => "11000110", 
    216 => "00000011", 217 => "00110111", 218 => "00100001", 219 => "00011011", 
    220 => "11101101", 221 => "11100110", 222 => "00100000", 223 => "11010001", 
    224 => "00001011", 225 => "00111110", 226 => "00001111", 227 => "00001001", 
    228 => "00000011", 229 => "11110010", 230 => "10111101", 231 => "10111110", 
    232 => "11010011", 233 => "00100110", 234 => "00011101", 235 => "00101111", 
    236 => "00101110", 237 => "00011011", 238 => "00010111", 239 => "11011010", 
    240 => "11011101", 241 => "11100110", 242 => "11000011", 243 => "00001010", 
    244 => "10111111", 245 => "11010010", 246 => "11001100", 247 => "11000000", 
    248 => "10111111", 249 => "11110011", 250 => "00001101", 251 => "11110101", 
    252 => "00010000", 253 => "10111111", 254 => "11010011", 255 => "11000001", 
    256 => "11010001", 257 => "11111110", 258 => "00011011", 259 => "11010100", 
    260 => "10110111", 261 => "11110110", 262 => "00000101", 263 => "00011100", 
    264 => "00001101", 265 => "00100101", 266 => "00100111", 267 => "11100110", 
    268 => "11101100", 269 => "00000111", 270 => "11001000", 271 => "00101100", 
    272 => "11001111", 273 => "11010000", 274 => "00011110", 275 => "10111101", 
    276 => "11001001", 277 => "00111100", 278 => "11101011", 279 => "00111000", 
    280 => "10111110", 281 => "11010000", 282 => "00000010", 283 => "11100111", 
    284 => "00101000", 285 => "11000111", 286 => "11011110", 287 => "11011011", 
    288 => "11011111", 289 => "00011111", 290 => "00101010", 291 => "00011111", 
    292 => "00000100", 293 => "00101101", 294 => "11110000", 295 => "11111100", 
    296 => "00101100", 297 => "00100000", 298 => "11011010", 299 => "01000001", 
    300 => "11001110", 301 => "11101100", 302 => "00011011", 303 => "10101110", 
    304 => "00010101", 305 => "11110111", 306 => "11100001", 307 => "11000111", 
    308 => "01000000", 309 => "00000100", 310 => "11111000", 311 => "00001011", 
    312 => "11101000", 313 => "11110110", 314 => "00000111", 315 => "00111100", 
    316 => "11111100", 317 => "00000100", 318 => "00110001", 319 => "11001000", 
    320 => "00111011", 321 => "11011110", 322 => "00110101", 323 => "11010011", 
    324 => "00000101", 325 => "00010110", 326 => "00001101", 327 => "11001011", 
    328 => "11001000", 329 => "11010000", 330 => "11000001", 331 => "00001000", 
    332 => "00101010", 333 => "00001111", 334 => "11001111", 335 => "00101111", 
    336 => "00101000", 337 => "11101000", 338 => "11111001", 339 => "00001010", 
    340 => "11010010", 341 => "00001111", 342 => "00110010", 343 => "11011101", 
    344 => "00001101", 345 => "00001110", 346 => "11001011", 347 => "11111100", 
    348 => "11000001", 349 => "00101011", 350 => "00001101", 351 => "00100000", 
    352 => "00001100", 353 to 354=> "00101010", 355 => "11010000", 356 => "00101011", 
    357 => "00000101", 358 => "11100010", 359 => "00011110", 360 => "11100100", 
    361 => "00011001", 362 => "01000011", 363 => "11010011", 364 => "11100011", 
    365 => "11110100", 366 => "11110110", 367 => "11111100", 368 => "10111110", 
    369 => "11011000", 370 => "00000001", 371 => "00101111", 372 => "11010110", 
    373 => "11011101", 374 => "11110100", 375 => "11001011", 376 => "00100101", 
    377 => "00101010", 378 => "11011010", 379 => "00110001", 380 => "00011000", 
    381 => "00000100", 382 => "11001100", 383 => "11001101", 384 => "00101111", 
    385 => "00000101", 386 => "11010001", 387 => "10111000", 388 => "11110001", 
    389 => "10101110", 390 => "00010011", 391 to 392=> "11110011", 393 => "10111000", 
    394 => "11111111", 395 => "00110100", 396 => "11101101", 397 => "11111001", 
    398 => "00110100", 399 => "11001111", 400 => "00010001", 401 => "00110000", 
    402 => "10100011", 403 => "11111110", 404 => "11101100", 405 => "11100011", 
    406 => "00001100", 407 => "00010011", 408 => "00111111", 409 => "00000110", 
    410 => "00101101", 411 => "11110101", 412 to 413=> "11101000", 414 => "11111000", 
    415 => "11011101", 416 => "00000010", 417 => "11101101", 418 => "10101000", 
    419 => "11010101", 420 => "11101001", 421 => "11100000", 422 => "11111010", 
    423 => "01001100", 424 => "11010101", 425 => "01000000", 426 => "00000110", 
    427 => "11000011", 428 => "11011101", 429 => "00001010", 430 => "00110110", 
    431 => "10110011", 432 => "11001001", 433 => "11011010", 434 => "11111000", 
    435 => "00110011", 436 => "00101000", 437 => "11001101", 438 => "11101000", 
    439 => "00101111", 440 => "11000111", 441 => "10111100", 442 => "00100000", 
    443 => "10110100", 444 => "11010010", 445 => "11101001", 446 => "00101011", 
    447 => "00001000", 448 => "00100101", 449 => "11001101", 450 => "11011010", 
    451 => "11000100", 452 => "00000000", 453 => "01001000", 454 => "00011011", 
    455 => "11110010", 456 => "00110010", 457 => "11101110", 458 => "00100011", 
    459 => "00100100", 460 => "11111100", 461 => "00001111", 462 => "00100001", 
    463 => "00000011", 464 => "10101111", 465 => "11010111", 466 => "00010011", 
    467 => "10000001", 468 => "00111111", 469 => "00100010", 470 => "00111110", 
    471 => "11010010", 472 => "01010000", 473 => "11001101", 474 => "11111110", 
    475 => "11111101", 476 => "11101100", 477 => "11101101", 478 => "00111011", 
    479 => "11000000", 480 => "11011011", 481 => "00100101", 482 => "11000101", 
    483 => "00011100", 484 => "10110000", 485 => "01000110", 486 => "00110000", 
    487 => "11101010", 488 => "11111110", 489 => "11110111", 490 => "00010011", 
    491 => "00000111", 492 => "11101001", 493 => "11101101", 494 => "11111110", 
    495 to 496=> "11100010", 497 => "00011011", 498 => "00101011", 499 => "00100001", 
    500 => "11010001", 501 => "10111100", 502 => "11000101", 503 => "11110000", 
    504 => "01000001", 505 => "11001100", 506 => "00001011", 507 => "11101010", 
    508 => "11001101", 509 => "00101101", 510 => "11100101", 511 => "00100111" );


attribute EQUIVALENT_REGISTER_REMOVAL : string;
begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;


Library IEEE;
use IEEE.std_logic_1164.all;

entity classify_W is
    generic (
        DataWidth : INTEGER := 8;
        AddressRange : INTEGER := 512;
        AddressWidth : INTEGER := 9);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of classify_W is
    component classify_W_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    classify_W_rom_U :  component classify_W_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


